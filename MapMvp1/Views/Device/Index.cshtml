
@{
    ViewData["Title"] = "Index";
}


    <div id="app">

        <h1>Device</h1>

        <div class="d-flex justify-content-center my-2">


            <div class="p-2 bd-highlight"></div>
            <div class="p-2 bd-highlight">


                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Vehicle Id</label>
                    <input type="number" v-model="submittedId" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
                </div>

                <button class="btn btn-primary" v-on:click="shareLocation">Share Location</button>



            </div>
            <div class="p-2 bd-highlight"></div>



        </div>


    </div>

@section Scripts{
    <script>
        const { createApp, ref } = Vue;





        



        const App = {
            setup() {

               




                let g = JSON.parse(localStorage.getItem("locationHistory"))
                console.log(typeof g);

                var firstTime = true;

                try {
                    console.log(g.length)
                    firstTime=false;
                }
                catch (e) {
                    console.log("----------Page Loading For First Time--------")
                }






                setInterval(function () {
                    console.log("--------------Save Data To Internet--------------")
                    SendLocationsToServer()
                    console.log("--------------Save Data To Internet--------------")

                }, 15000);







                const SendLocationsToServer =  (latitude, longitude) => {
                    let locations = JSON.parse(localStorage.getItem("locationHistory"))
                    axios
                        .post("/api/LiveLocation/AddLocationHistory", locations)
                        .then(function (response) {
                            console.log("hi");
                            console.log(response);

                            

                        })
                        .catch(function (error) {
                            console.log(error);
                            var lastLocationHistory = JSON.parse(localStorage.getItem("locationHistory"))
                           
                            localStorage['locationHistory'] = JSON.stringify([...lastLocationHistory, ...locations]);

                        });

                    localStorage['locationHistory'] = JSON.stringify([]);

                };
















                console.log("----------Sharing Location----------ss")

                const vehicleId = ref(null);
                const submittedId = ref(null);



                var connection = new signalR.HubConnectionBuilder().withUrl("/LiveLocation").build();

                console.log("--------Connection----------")
                console.log(connection);
                console.log("--------Connection----------")


                //Disable send button until connection is established

                connection
                    .start()
                    .then(function () {
                        console.log("----Connection Id Here------ ");
                        console.log("Connection Id");
                        console.log(connection.connectionId);
                        //console.log(connection.hub.id);
                        console.log("----Connection Id Here------ ");

                        console.log("connected");
                    })
                    .catch(function (err) {
                        return console.error(err.toString());
                    });



















                const shareLocation = () => {

                    console.log("----------Sharing Location----------")
                    console.log("----------Sharing Location----------")
                    console.log("----------Sharing Location----------")

                    if (submittedId.value != null) {

                        vehicleId.value = submittedId.value;
                        setInterval(function () {
                            navigator.geolocation.getCurrentPosition(showPosition );

                        }, 5000);

                     }

                }



              //      navigator.geolocation.getCurrentPosition(showPosition);

                


                function showPosition(position) {
                    let lat = position.coords.latitude;
                    let lon = position.coords.longitude;

                    console.log(lat);
                    console.log(lon);

                    SetLiveLocation(lat, lon);
                    console.log("------Calling The Api------");
                }


                const SetLiveLocation = async (latitude, longitude) => {
                    var liveLocationObject = {
                        VehicleId: Number(submittedId.value),
                        Latitude: latitude,
                        Longitude: longitude,
                        TimeStamp: Math.floor(Date.now() / 1000),
                    };



                    console.log(liveLocationObject);




                    if (firstTime == true) {
                        // first time



                       // check for closing and opening browser

                  
                            localStorage['locationHistory'] = JSON.stringify([liveLocationObject]);


                        //











                        firstTime = false;
                    }



                    else {
                        var lastLocationHistory = JSON.parse(localStorage.getItem("locationHistory"))

                        localStorage['locationHistory'] = JSON.stringify([...lastLocationHistory, liveLocationObject]);

                    }



                    console.log(typeof JSON.parse(localStorage.getItem("locationHistory")));


                    console.log("location From Db");
                    console.log(JSON.parse(localStorage.getItem("locationHistory")));


                    connection.invoke("SendLiveLocationV2", liveLocationObject.Latitude, liveLocationObject.Longitude, liveLocationObject.VehicleId, liveLocationObject.TimeStamp).catch(function (err) {


                        return console.error(err.toString());
                    });



                };


                //      setInterval(function () {
                //navigator.geolocation.getCurrentPosition(showPosition);

                //  }, 5000);


                return {  shareLocation, submittedId};
            },

        };

        createApp(App).mount("#app");

    </script>


}